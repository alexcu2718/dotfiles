mysh() {
    ps -p $$ -o comm= | awk -F/ '{print $NF}'
}

CFG() {
    "$EDITOR" "$HOME/.$(mysh)rc"
}

REFRESH() {
    source "$HOME/.$(mysh)rc"
}

unalias gg > /dev/null 2>&1

gg() {
  git clone "$1" && cd "$(basename "$1" .git)"
}

unalias lsgrep > /dev/null 2>&1

lsgrep() {
ls -a  "$1"  | grep -Ei  "$2" 
}


unalias gitclone > /dev/null 2>&1

gitclone() {
  git clone "git@github.com:$1.git"
}

unalias exportpath > /dev/null 2>&1




exportpath () {
  echo "export PATH=\$PATH:$1" >> ~/.shell_functions
}



eval "$(juliaup completions $( mysh ) )"
eval "$(starship init $(mysh))"
alias SHELLFUNCTIONS="nano $HOME/.shell_functions"
alias SWITCH_KEYBOARD="$HOME/.toggle_keyboard_layout.sh"
alias R='R -q --interactive --no-restore --no-save'
export MANPATH="/usr/local/man:$MANPATH"
export LANG=en_US.UTF-8
export LC_CTYPE="en_US.UTF-8"
export PATH=$PATH:~/.local/bin
export RUSTC_WRAPPER="$(which sccache)"
alias radian='radian -q'
eval "$(uv generate-shell-completion $( mysh ))"
eval "$(uvx --generate-shell-completion $( mysh ))"



if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   export EDITOR='nvim'
 fi

# Compilation flags
export ARCHFLAGS="-arch $(uname -m)"

alias rg='rg --no-messages'

export GIT_ASKPASS=/opt/visual-studio-code/resources/app/extensions/git/dist/askpass.sh
export VSCODE_GIT_ASKPASS_NODE=/opt/visual-studio-code/code
export VSCODE_GIT_ASKPASS_EXTRA_ARGS=""
export VSCODE_GIT_ASKPASS_MAIN=/opt/visual-studio-code/resources/app/extensions/git/dist/askpass-main.js
export VSCODE_GIT_IPC_HANDLE=/run/user/1000/vscode-git-038080b684.sock
#export TERM=xterm-kitty



eval "$(zoxide init $(mysh))"

alias cat='bat --paging=never --style=plain'
alias CLIPBOARD='xclip -sel clip'
#alias cd='z'
export PATH=$PATH:$HOME/.cargo/bin
eval "$(direnv hook $(mysh) 2>/dev/null)"
alias CLIPPY='cargo clippy --all -- -W clippy::all -W clippy::pedantic -W clippy::restriction -W clippy::nursery -D warnings'
alias SHELLFUNCTIONS="$EDITOR ~/.shell_functions"
alias ls='eza -g'
alias KILL='pkill -9'
#unalias ZIP >  /dev/null/

ZIP () {
	zip -r "$1.zip" "$1"
}

export  GCM_CREDENTIAL_STORE=secretservice
alias ssh='TERM=xterm ssh'
alias GITBRANCH='echo "$(git branch -r)"'
alias GITLINK='git -C "$(git rev-parse --show-toplevel)" remote get-url origin'
 
alias RUNBSD='qemu-system-x86_64 \
  -enable-kvm \
  -cpu host \
  -smp 8,sockets=1,cores=4,threads=2 \
  -m 8000 \
  -drive file="$HOME/Downloads/freebsd.qcow2",format=qcow2 \
  -netdev user,id=mynet0,hostfwd=tcp::2222-:22 \
  -device e1000,netdev=mynet0 \
  -device virtio-balloon \
  -display sdl

'

   
alias RUNBSD_NOGRAPHIC='qemu-system-x86_64 \
  -enable-kvm \
  -cpu host \
  -smp 8,sockets=1,cores=4,threads=2 \
  -m 8000 \
  -drive file="$HOME/Downloads/freebsd.qcow2",format=qcow2 \
  -netdev user,id=mynet0,hostfwd=tcp::2222-:22 \
  -device e1000,netdev=mynet0 \
  -device virtio-balloon \
   -nographic'


  
alias RUNOSX='cd ~/OSX-KVM && ./OpenCore-Boot.sh'


alias RUNBIGENDIAN="qemu-system-ppc64 \
  -cpu POWER9 \
  -accel tcg,thread=multi \
  -M pseries \
  -m 12G \
  -smp 8 \
  -drive file=\"$HOME/Downloads/debian-ppc64.img\",format=raw,if=virtio,aio=threads \
  -netdev user,id=net0,hostfwd=tcp::2222-:22 \
  -device virtio-net-pci,netdev=net0 "

alias RUNWINDOWS="qemu-system-x86_64 \
-machine type=q35,accel=kvm \
-enable-kvm \
-cpu Skylake-Client-v4,hv_relaxed,hv_vpindex,hv_time,hv_vapic,hv_runtime,hv_synic,hv_stimer,hv_tlbflush,hv_ipi,hv_frequencies \
-smp 2 \
-m 8096 -mem-prealloc \
-vga virtio \
-device ich9-intel-hda \
-device hda-duplex,audiodev=hda \
-audiodev pa,id=hda,server=unix:/run/user/1000/pulse/native,out.frequency=44100 \
-device virtio-net,netdev=vmnic \
-netdev user,id=vmnic,hostfwd=tcp::2222-:22 \
-device qemu-xhci,id=xhci \
-device usb-tablet,bus=xhci.0 \
-chardev socket,path=/tmp/qga.sock,server=on,wait=off,id=qga0 \
-device virtio-serial \
-device virtserialport,chardev=qga0,name=org.qemu.guest_agent.0 \
-object rng-random,id=rng0,filename=/dev/urandom \
-device virtio-rng-pci,max-bytes=1024,period=1000 \
-drive format=raw,file=${HOME}/.qemu/windows_10/windows_10.img"
#i dont want to use the shitty js one, no npm!
alias gitmoji="go-gitmoji-cli"
alias GITRENEW='git fetch origin && git reset --hard origin/$(git rev-parse --abbrev-ref HEAD)'


alias sort='sort --parallel=$(nproc)'
alias grep='grep  --color=auto'
alias grepn='grep -n --color=auto'

if command -v fdf >/dev/null 2>&1; then
    eval "$(fdf --generate $(mysh))" >/dev/null 2>&1
fi

